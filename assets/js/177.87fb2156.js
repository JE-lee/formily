(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{641:function(n,o,e){"use strict";e.r(o),o.default="<template>\n  <Button @click=\"handleOpen\">点击打开表单</Button>\n</template>\n\n<script>\nimport { FormDialog, FormLayout, FormItem, Input } from '@formily/view-design'\nimport { Button } from 'view-design'\nimport { createSchemaField } from '@formily/vue'\n\nconst { SchemaField } = createSchemaField({\n  components: {\n    FormItem,\n    Input,\n  },\n})\n\n// 弹框表单组件\nconst DialogForm = {\n  props: ['resolve', 'reject'],\n  data() {\n    const schema = {\n      type: 'object',\n      properties: {\n        aaa: {\n          type: 'string',\n          title: '输入框1',\n          required: true,\n          'x-decorator': 'FormItem',\n          'x-component': 'Input',\n        },\n        bbb: {\n          type: 'string',\n          title: '输入框2',\n          required: true,\n          'x-decorator': 'FormItem',\n          'x-component': 'Input',\n        },\n        ccc: {\n          type: 'string',\n          title: '输入框3',\n          required: true,\n          'x-decorator': 'FormItem',\n          'x-component': 'Input',\n        },\n        ddd: {\n          type: 'string',\n          title: '输入框4',\n          required: true,\n          'x-decorator': 'FormItem',\n          'x-component': 'Input',\n        },\n      },\n    }\n    return {\n      schema,\n    }\n  },\n  render(h) {\n    return (\n      <FormLayout labelCol={6} wrapperCol={10}>\n        <SchemaField schema={this.schema} />\n      </FormLayout>\n    )\n  },\n}\n\nexport default {\n  components: { Button },\n  data() {\n    return {\n      dialogProps: {\n        title: '弹框表单',\n        okButtonProps: {\n          loading: false,\n        },\n        beforeClose: (done) => {\n          // if (!this.dialogProps.okButtonProps.loading) {\n          //   done()\n          // }\n          return !this.dialogProps.okButtonProps.loading\n            ? Promise.resolve()\n            : Promise.reject()\n        },\n      },\n    }\n  },\n  methods: {\n    handleOpen() {\n      const formDialogHandler = FormDialog(this.dialogProps, DialogForm)\n\n      formDialogHandler\n        .open({\n          initialValues: {\n            aaa: '123',\n          },\n        })\n        .then((values) => {\n          this.dialogProps.okButtonProps.loading = true\n\n          setTimeout(() => {\n            this.dialogProps.okButtonProps.loading = false\n            formDialogHandler.close()\n          }, 2000)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    },\n  },\n}\n<\/script>\n"}}]);