(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{693:function(n,e,o){"use strict";o.r(e),e.default="<template>\n  <FormProvider :form=\"form\">\n    <FormLayout :labelCol=\"6\" :wrapperCol=\"16\">\n      <SchemaField :schema=\"schema\" />\n      <FormButtonGroup alignFormItem>\n        <Submit onSubmit=\"log\">提交</Submit>\n      </FormButtonGroup>\n    </FormLayout>\n  </FormProvider>\n</template>\n\n<script>\nimport { createForm } from '@formily/core'\nimport { createSchemaField, FormProvider } from '@formily/vue'\nimport {\n  FormButtonGroup,\n  FormLayout,\n  FormItem,\n  Input,\n  TextArea,\n  Submit,\n  Space,\n} from '@formily/view-design'\n\nconst { SchemaField } = createSchemaField({\n  components: {\n    FormLayout,\n    FormItem,\n    Input,\n    TextArea,\n    Space,\n  },\n})\n\nexport default {\n  components: {\n    FormProvider,\n    FormButtonGroup,\n    FormLayout,\n    SchemaField,\n    Submit,\n  },\n  data() {\n    const schema = {\n      type: 'object',\n      properties: {\n        name: {\n          type: 'void',\n          title: '姓名',\n          'x-decorator': 'FormItem',\n          'x-decorator-props': {\n            asterisk: true,\n            feedbackLayout: 'none',\n          },\n          'x-component': 'Space',\n          properties: {\n            firstName: {\n              type: 'string',\n              'x-decorator': 'FormItem',\n              'x-component': 'Input',\n              required: true,\n            },\n            lastName: {\n              type: 'string',\n              'x-decorator': 'FormItem',\n              'x-component': 'Input',\n              required: true,\n            },\n          },\n        },\n        texts: {\n          type: 'void',\n          title: '文本串联',\n          'x-decorator': 'FormItem',\n          'x-decorator-props': {\n            asterisk: true,\n            feedbackLayout: 'none',\n          },\n          'x-component': 'Space',\n          properties: {\n            aa: {\n              type: 'string',\n              'x-decorator': 'FormItem',\n              'x-decorator-props': {\n                addonAfter: '单位',\n              },\n              'x-component': 'Input',\n              required: true,\n            },\n            bb: {\n              type: 'string',\n              'x-decorator': 'FormItem',\n              'x-decorator-props': {\n                addonAfter: '单位',\n              },\n              'x-component': 'Input',\n              required: true,\n            },\n            cc: {\n              type: 'string',\n              'x-decorator': 'FormItem',\n              'x-decorator-props': {\n                addonAfter: '单位',\n              },\n              'x-component': 'Input',\n              required: true,\n            },\n          },\n        },\n\n        textarea: {\n          type: 'string',\n          title: '文本框',\n          'x-decorator': 'FormItem',\n          'x-component': 'TextArea',\n          'x-component-props': {\n            style: {\n              width: 400,\n            },\n          },\n          required: true,\n        },\n      },\n    }\n\n    const form = createForm()\n\n    return {\n      form,\n      schema,\n    }\n  },\n  methods: {\n    logs(value) {\n      console.log(value)\n    },\n  },\n}\n<\/script>\n"}}]);