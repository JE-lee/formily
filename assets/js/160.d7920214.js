(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{624:function(n,e,o){"use strict";o.r(e),e.default='<template>\n  <FormProvider :form="form">\n    <SchemaField>\n      <SchemaArrayField\n        name="array"\n        x-decorator="FormItem"\n        x-component="ArrayTable"\n      >\n        <SchemaObjectField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ width: 80, title: \'Index\', slot: \'Index\' }"\n            ><SchemaVoidField\n              x-decorator="FormItem"\n              x-component="ArrayTableIndex"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{\n              prop: \'a1\',\n              title: \'A1\',\n              slot: \'A1\',\n              width: 200,\n            }"\n          >\n            <SchemaStringField\n              x-decorator="Editable"\n              name="a1"\n              :required="true"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A2\', slot: \'A2\', width: 200 }"\n          >\n            <SchemaStringField\n              x-decorator="FormItem"\n              name="a2"\n              :required="true"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A3\', slot: \'A3\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a3"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A4\', slot: \'A4\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a4"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A5\', slot: \'A5\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a5"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A6\', slot: \'A6\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a6"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A7\', slot: \'A3\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a7"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A8\', slot: \'A8\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a8"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A9\', slot: \'A9\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a9"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A10\', slot: \'A10\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a10"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A11\', slot: \'A11\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a11"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A12\', slot: \'A12\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a12"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A13\', slot: \'A13\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a13"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A14\', slot: \'A14\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a14"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A15\', slot: \'A15\', width: 200 }"\n          >\n            <SchemaStringField\n              name="a15"\n              :required="true"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            :x-component-props="{\n              title: \'Operations\',\n              slot: \'Operations\',\n              prop: \'operations\',\n              width: 200,\n            }"\n          >\n            <SchemaVoidField x-component="FormItem">\n              <SchemaVoidField x-component="ArrayTableRemove" />\n              <SchemaVoidField x-component="ArrayTableMoveUp" />\n              <SchemaVoidField x-component="ArrayTableMoveDown" />\n            </SchemaVoidField>\n          </SchemaVoidField>\n        </SchemaObjectField>\n        <SchemaVoidField x-component="ArrayTableAddition" title="添加条目" />\n      </SchemaArrayField>\n    </SchemaField>\n    <Submit @submit="log">提交</Submit>\n    <Button\n      @click="\n        () => {\n          form.setInitialValues({\n            array: range(20),\n          })\n        }\n      "\n    >\n      加载10W条超大数据\n    </Button>\n    \x3c!-- <Alert\n      :style="{ marginTop: \'10px\' }"\n      title="注意：开启formily插件的页面，因为后台有数据通信，会占用浏览器算力，最好在无痕模式(无formily插件)下测试"\n      type="warning"\n    /> --\x3e\n  </FormProvider>\n</template>\n\n<script>\nimport { createForm } from \'@formily/core\'\nimport { FormProvider, createSchemaField } from \'@formily/vue\'\nimport {\n  Submit,\n  FormItem,\n  ArrayTable,\n  ArrayTableColumn,\n  ArrayTableAddition,\n  ArrayTableMoveDown,\n  ArrayTableMoveUp,\n  ArrayTableRemove,\n  ArrayTableIndex,\n  ArrayTableSortHandle,\n  Input,\n  Editable,\n} from \'@formily/view-design\'\nimport { Button, Alert } from \'view-design\'\n\nconst fields = createSchemaField({\n  components: {\n    FormItem,\n    ArrayTable,\n    ArrayTableColumn,\n    ArrayTableAddition,\n    ArrayTableMoveDown,\n    ArrayTableMoveUp,\n    ArrayTableRemove,\n    ArrayTableIndex,\n    ArrayTableSortHandle,\n    Input,\n    Editable,\n  },\n})\n\nexport default {\n  components: { FormProvider, Submit, Button, Alert, ...fields },\n  data() {\n    const form = createForm()\n    return {\n      form,\n    }\n  },\n  methods: {\n    log(...v) {\n      console.log(...v)\n    },\n    range(count) {\n      return Array.from(new Array(count)).map((_, key) => ({\n        aaa: key,\n      }))\n    },\n  },\n}\n<\/script>\n'}}]);