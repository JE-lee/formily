(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{622:function(n,e,o){"use strict";o.r(e),e.default='<template>\n  <FormProvider :form="form">\n    <SchemaField>\n      <SchemaBooleanField\n        name="hideFirstColumn"\n        x-decorator="FormItem"\n        x-component="Switch"\n        title="隐藏A2"\n      />\n      <SchemaArrayField\n        name="array"\n        x-decorator="FormItem"\n        x-component="ArrayTable"\n      >\n        <SchemaObjectField>\n          <SchemaVoidField\n            name="column1"\n            x-component="ArrayTableColumn"\n            :x-component-props="{ width: 80, title: \'Index\' }"\n            ><SchemaVoidField x-component="ArrayTableIndex" />\n          </SchemaVoidField>\n          <SchemaVoidField\n            name="column2"\n            x-component="ArrayTableColumn"\n            :x-component-props="{\n              title: \'显隐->A2\',\n              width: 100,\n            }"\n          >\n            <SchemaBooleanField\n              name="a1"\n              x-decorator="FormItem"\n              x-component="Switch"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            x-component="ArrayTableColumn"\n            name="column3"\n            :x-component-props="{ title: \'A2\', width: 200 }"\n          >\n            <SchemaStringField\n              x-decorator="FormItem"\n              name="a2"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            name="column4"\n            x-component="ArrayTableColumn"\n            :x-component-props="{ title: \'A3\' }"\n          >\n            <SchemaStringField\n              name="a3"\n              x-decorator="FormItem"\n              x-component="Input"\n            />\n          </SchemaVoidField>\n          <SchemaVoidField\n            name="column5"\n            x-component="ArrayTableColumn"\n            :x-component-props="{\n              title: \'Operations\',\n              prop: \'operations\',\n              width: 200,\n              fixed: \'right\',\n            }"\n          >\n            <SchemaVoidField x-component="FormItem">\n              <SchemaVoidField x-component="ArrayTableRemove" />\n              <SchemaVoidField x-component="ArrayTableMoveUp" />\n              <SchemaVoidField x-component="ArrayTableMoveDown" />\n            </SchemaVoidField>\n          </SchemaVoidField>\n        </SchemaObjectField>\n        <SchemaVoidField x-component="ArrayTableAddition" title="添加条目" />\n      </SchemaArrayField>\n    </SchemaField>\n    <Submit @submit="log">提交</Submit>\n  </FormProvider>\n</template>\n\n<script>\nimport { createForm, onFieldChange, onFieldReact } from \'@formily/core\'\nimport { FormProvider, createSchemaField } from \'@formily/vue\'\nimport {\n  Submit,\n  FormItem,\n  ArrayTable,\n  ArrayTableColumn,\n  ArrayTableAddition,\n  ArrayTableMoveDown,\n  ArrayTableMoveUp,\n  ArrayTableRemove,\n  ArrayTableIndex,\n  ArrayTableSortHandle,\n  Input,\n  Editable,\n  Switch,\n} from \'@formily/view-design\'\n\nconst fields = createSchemaField({\n  components: {\n    FormItem,\n    ArrayTable,\n    ArrayTableColumn,\n    ArrayTableAddition,\n    ArrayTableMoveDown,\n    ArrayTableMoveUp,\n    ArrayTableRemove,\n    ArrayTableIndex,\n    ArrayTableSortHandle,\n    Input,\n    Editable,\n    Switch,\n  },\n})\n\nexport default {\n  components: { FormProvider, Submit, ...fields },\n  data() {\n    const form = createForm({\n      effects: () => {\n        //主动联动模式\n        onFieldChange(\'hideFirstColumn\', [\'value\'], (field) => {\n          field.query(\'array.column3\').take((target) => {\n            console.log(\'target\', target)\n            target.visible = !field.value\n          })\n          field.query(\'array.*.a2\').take((target) => {\n            target.visible = !field.value\n          })\n        })\n        //被动联动模式\n        onFieldReact(\'array.*.a2\', (field) => {\n          field.visible = !field.query(\'.a1\').get(\'value\')\n        })\n      },\n    })\n\n    return {\n      form,\n    }\n  },\n  methods: {\n    log(...v) {\n      console.log(...v)\n    },\n  },\n}\n<\/script>\n'}}]);