(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{688:function(n,e,t){"use strict";t.r(e),e.default="<template>\n  <FormProvider :form=\"form\">\n    <SchemaField>\n      <SchemaStringField\n        name=\"select\"\n        title=\"异步搜索选择框\"\n        x-decorator=\"FormItem\"\n        x-component=\"Select\"\n        :x-component-props=\"{\n          filterable: true,\n          remote: true,\n          style: {\n            width: '240px',\n          },\n        }\"\n      />\n    </SchemaField>\n    <Submit @submit=\"log\">提交</Submit>\n  </FormProvider>\n</template>\n\n<script>\nimport { createForm, onFieldInit, onFieldReact } from '@formily/core'\nimport { action, observable } from '@formily/reactive'\nimport { createSchemaField, FormProvider } from '@formily/vue'\nimport { FormItem, Select, Submit } from '@formily/view-design'\n\nlet timeout\nlet currentValue\n\nfunction fetchData(value, callback) {\n  if (timeout) {\n    clearTimeout(timeout)\n    timeout = null\n  }\n  currentValue = value\n\n  function fake() {\n    callback([\n      {\n        label: 'AAA',\n        value: 'aaa',\n      },\n      {\n        label: 'BBB',\n        value: 'ccc',\n      },\n    ])\n  }\n\n  timeout = setTimeout(fake, 300)\n}\n\nconst useAsyncDataSource = (pattern, service) => {\n  const keyword = observable.ref('')\n\n  onFieldInit(pattern, (field) => {\n    field.setComponentProps({\n      remoteMethod: (value) => {\n        keyword.value = value\n      },\n    })\n  })\n\n  onFieldReact(pattern, (field) => {\n    field.loading = true\n    service({ field, keyword: keyword.value }).then(\n      action((data) => {\n        field.dataSource = data\n        field.loading = false\n      })\n    )\n  })\n}\n\nconst form = createForm({\n  effects: () => {\n    useAsyncDataSource('select', async ({ keyword }) => {\n      if (!keyword) {\n        return []\n      }\n      return new Promise((resolve) => {\n        fetchData(keyword, resolve)\n      })\n    })\n  },\n})\nconst fields = createSchemaField({\n  components: {\n    FormItem,\n    Select,\n  },\n})\n\nexport default {\n  components: { FormProvider, ...fields, Submit },\n  data() {\n    return {\n      form,\n    }\n  },\n  methods: {\n    log(value) {\n      console.log(value)\n    },\n  },\n}\n<\/script>\n"}}]);